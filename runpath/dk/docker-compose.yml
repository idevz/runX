version: '2'
services:
  go-base:
    image: zhoujing/idevz-runx-golang:1.12
    privileged: true
    network_mode: host
    # ulimits:
    #   core: 9999
    # ports:
    #   - '1234:1234'
    environment:
      - PATH=/go/bin:$PATH
    volumes:
      - $MCODE/z/git/go:/go
      - $MCODE/z/idevz-go:/z/idevz-go
  wm-go:
    extends: go-base
    container_name: wm-go
    working_dir: /z/idevz-go/src/git.intra.weibo.com/openapi_rd/weibo-motan-go
    command:
      - bash
      - -c
      - |
        go test -v -race -coverprofile=coverage.txt -covermode=atomic $$(go list ./... | grep -v main)
  wm-go-b:
    extends: go-base
    container_name: wm-go-b
    working_dir: /z/idevz-go/src/git.intra.weibo.com/openapi_rd/weibo-motan-go/main
    command:
      - bash
      - -c
      - |
        go build -a -installsuffix cgo -o weibo-mesh
  wm-go-r:
    extends: go-base
    container_name: wm-go-r
    volumes:
      # - $GIT/weibo-mesh/testhelpers:/runX/testhelpers
      - $GIT/weibo-mesh/mesh-confs:/runX/mesh-confs
      - $GIT/weibo-mesh/testhelpers/logs:/data1/motan/logs
      - $GIT/weibo-mesh/testhelpers/snapshot:/data1/motan/snapshot
    working_dir: /z/idevz-go/src/git.intra.weibo.com/openapi_rd/weibo-motan-go/main
    command: go run agent.go -c /runX/mesh-confs -pool demo -application demo
  wm-go-d:
    extends: go-base
    container_name: wm-go-d
    volumes:
      # - $GIT/weibo-mesh/testhelpers:/runX/testhelpers
      - $GIT/weibo-mesh/mesh-confs:/runX/mesh-confs
      - $GIT/weibo-mesh/testhelpers/logs:/data1/motan/logs
      - $GIT/weibo-mesh/testhelpers/snapshot:/data1/motan/snapshot
    working_dir: /z/idevz-go/src/git.intra.weibo.com/openapi_rd/weibo-motan-go/main
    command: dlv-pvm debug --headless --listen=:2345 --log --api-version=2 --build-flags="-gcflags '-N -l'" -- -c /runX/mesh-confs -pool demo -application demo
  m-go:
    extends: go-base
    container_name: m-go
    working_dir: /z/idevz-go/src/github.com/weibocom/motan-go
    command:
      - bash
      - -c
      - |
        go test -v -race -coverprofile=coverage.txt -covermode=atomic $$(go list ./... | grep -v main)
  th:
    extends: go-base
    container_name: th
    volumes:
      - $GIT/weibo-mesh/testhelpers:/runX/testhelpers
    working_dir: /runX/testhelpers
    command: 
      - bash
      - -c
      - |
        go build -a -installsuffix cgo -o /runX/testhelpers/tmesh /runX/testhelpers/cmd/tmesh/main.go
        go build -a -installsuffix cgo -o /runX/testhelpers/mtserver /runX/testhelpers/cmd/mtserver/main.go
  mc-th:
    extends: go-base
    # image: zhoujing/wm-testhelper:1.0.0
    # image: registry.api.weibo.com/openapi_rd/weibo-mesh-with-mesh-confs:test-0.0.6
    image: registry.api.weibo.com/openapi_rd/weibo-mesh:test
    container_name: mc-th
    volumes:
      # - $GIT/weibo-mesh/testhelpers:/runX/testhelpers
      - $GIT/weibo-mesh/mesh-confs:/runX/mesh-confs
      - $GIT/weibo-mesh/testhelpers/logs:/data1/motan/logs
      - $GIT/weibo-mesh/testhelpers/snapshot:/data1/motan/snapshot
    command: /weibo-mesh -c /runX/mesh-confs -pool demo -application demo
      # - bash
      # - -c
      # - |
      #   /weibo-mesh -c /runX/mesh-confs -pool demo -application demo
  rth:
    extends: go-base
    container_name: rth
    environment:
      - MESH_DETECT_BACKEND_URL=http://10.75.24.199:8080/2/
      # - MESH_DETECT_BACKEND_URL=10.75.24.199:8080/2/
      # - MESH_DETECT_OK_STATUS=200
    volumes:
      - $GIT/weibo-mesh/testhelpers:/runX/testhelpers
    working_dir: /runX/testhelpers/cmd/tmesh
    command: 
      - bash
      - -c
      - |
        go run main.go -c /runX/testhelpers/mesh-confs -pool testhelper -detect
        # dlv-pvm debug --headless --listen=:2345 --log --api-version=2 --build-flags="-gcflags '-N -l'" -- -c /runX/testhelpers/mesh-confs -pool testhelper -detect
  gdbug:
    extends: go-base
    container_name: gdbug
    volumes:
      - $GIT/weibo-mesh/testhelpers:/runX/testhelpers
      # - $GIT/weibo-mesh/mesh-confs/:/mesh-confs
      - $GIT/weibo-mesh/testhelpers/mesh-confs/:/mesh-confs
    working_dir: /runX/testhelpers/cmd/tmesh
    command: dlv-pvm debug --headless --listen=:2345 --log --api-version=2 --build-flags="-gcflags '-N -l'" -- -c /mesh-confs -pool demo
    # x docker run --privileged --net host --rm --name=golang-debug -e PATH=/go/bin:$PATH -v $MCODE/z/git/go:/go -v $MCODE/z/idevz-go:/z/idevz-go -v $GIT/weibo-mesh/testhelpers:/runX/testhelpers -v $GIT/weibo-mesh/testhelpers/mesh-confs/:/mesh-confs -w /runX/testhelpers/cmd/tmesh zhoujing/idevz-runx-golang:1.12 dlv-pvm debug --headless --listen=:2345 --log --api-version=2 --build-flags="-gcflags '-N -l'" -- -c /mesh-confs -pool testhelper
  go-bench:
    extends: go-base
    container_name: go-bench
    working_dir: /idevz-go/src/idevz/bench
    # -bench 接受表达式做参数，匹配基准测试的函数，`.` 表示运行所有基准测试
    # -run 匹配单元测试函数，为避免单元测试结果影响查看基准测试，将其设置为一个不存在的单元测试方法 `None`
    # -benchtime 测试时长，默认为 1 秒
    # -benchmem 每次操作分配内存的次数以及分配的字节数
    # 结果中 `-number` 这个 Number 代表 GOMAXPROCS 的值
    # -gcflags "-N -l" 忽略编译器优化
    command: go test -bench . -benchmem -run None -gcflags "-N -l"
  go-test:
    extends: go-base
    container_name: go-test
    working_dir: /z/idevz-go/src/github.com/weibocom/motan-go/
    command: 
      - bash
      - -c
      - go test -v -race -coverprofile=coverage.txt -covermode=atomic $$(go list ./... | grep -v main)
    # go test -race -args -test.v -test.run ^TestAgent_InitCall$
  gmr:
    extends: go-base
    container_name: gmr
    environment:
      - GO111MODULE=on
    volumes:
      - $PRJ_ROOT:/runx_go
    working_dir: /runx_go
    command: go mod edit --require=$R
  gmtdy:
    extends: go-base
    container_name: gmtdy
    environment:
      - GO111MODULE=on
    volumes:
      - $PRJ_ROOT:/runx_go
    working_dir: /runx_go
    command: go mod tidy
    # GO111MODULE=on go mod edit -replace=golang.org/x/tools=github.com/golang/tools@master

########## openresty start ##########
  openresty-base:
    image: zhoujing/idevz-runx-openresty:1.15.6.1rc0
    network_mode: host
    privileged: true
    environment:
      - MOTAN_ENV=development
    volumes:
      - /lib/modules/4.18.18/build:/lib/modules/4.18.18/build
      - $GIT/weibo-or/v/lib/v:/usr/local/openresty-1.15.6.1rc0-debug/site/lualib/v
      - $GIT/weibo-or/motan-openresty/lib/motan:/usr/local/openresty-1.15.6.1rc0-debug/site/lualib/motan
      - $GIT/weibo-or/motan-openresty/lib/motan/libs/libmotan_tools.so:/lib64/libmotan_tools.so
      - $GIT/weibo-or/motan-openresty/lib/motan/libs/cmotan.so:/usr/local/openresty-1.15.6.1rc0-debug/site/lualib/cmotan.so
      - $GIT/weibo-or/weibo-motan/lib/wmotan:/usr/local/openresty-1.15.6.1rc0-debug/site/lualib/wmotan
      - $GIT/weibo-or/weibo-motan/t/resty:/usr/local/openresty-1.15.6.1rc0-debug/site/lualib/resty
    # command: openresty -c v.conf -p run_path -g "daemon off;"
  mort:
    extends: openresty-base
    container_name: mort
    volumes:
      - $GIT/weibo-or/motan-openresty:/motan-openresty
    working_dir: /motan-openresty
    command: prove -v ./t/000-sanity.t
  orv:
    extends: openresty-base
    container_name: orv
    command: openresty -V
  video:
    extends: openresty-base
    container_name: video
    ports:
      - '1234:1234'
    environment:
      - MOTAN_ENV=development
      - APP_ROOT=/video_obj/
    volumes:
      - $GIT/weibo-or/video/:/video_obj
    working_dir: /video_obj
    command: openresty -c v.conf -p /video_obj/run_path -g "daemon off;"

########## php start ##########
  php-base:
    image: zhoujing/idevz-runx-php:7.3.2
    volumes:
      - $GIT/weibo-mesh/php-use/www/:/motan-php
    working_dir: /motan-php
  prun:
    extends: php-base
    container_name: prun
    command: php -r '$$a=NULL;var_dump(isset($$a));'
  pr:
    extends: php-base
    container_name: pr
    command: $CMD